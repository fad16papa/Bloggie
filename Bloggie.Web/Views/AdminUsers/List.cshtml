@model Bloggie.Web.Models.ViewModels.UserViewModel

@{

}


<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Users - Admin</h1>
    </div>
</div>

<div>
    <div class="container py-5">

        <div class="mb-3 d-flex justify-content-end">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-toggle="modal"
                data-bs-placement="top" data-bs-custom-class="custom-tooltip" data-bs-title="Create User"
                data-bs-target="#modalCreateUser">
                <i class="bi bi-person-add"></i>
            </button>
        </div>

        @if (Model.Users != null || Model.Users.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Username</th>
                        <th>email</th>
                        <th> </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Users)
                    {
                        <tr>
                            <td>@user.Id</td>
                            <td>@user.Username</td>
                            <td>@user.Email</td>
                            <td>
                                <form method="post" asp-controller="AdminUsers" asp-action="Delete" asp-route-id="@user.Id">
                                    <button class="btn btn-danger" type="submit">Delete</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No Users Found!</p>
        }
    </div>
</div>

<form id="userCreateForm" method="post">
    @Html.AntiForgeryToken()
    <div class="modal fade" id="modalCreateUser" tabindex="-1" aria-labelledby="modalCreateUser" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="modalCreateUser">Create New User</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="errorMessages" class="mb-3"></div>
                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <input type="text" class="form-control" asp-for="Username" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" asp-for="Email" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="password" class="form-control" asp-for="Password" required />
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" id="checkUserRole" class="form-check-input" value="User" checked
                                disabled />
                            <label class="form-check-label" for="checkUserRole">User Role</label>
                        </div>
                        @if (User.IsInRole("SuaperAdmin"))
                        {
                            <div class="form-check">
                                <input type="checkbox" id="checkAdminRole" class="form-check-input" asp-for="AdminRole" />
                                <label class="form-check-label" for="checkAdminRole">Admin Role</label>
                            </div>
                        }

                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btn-userCreateCancel" type="button" class="btn btn-secondary"
                        data-bs-dismiss="modal">Close</button>
                    <button id="btn-userCreate" type="button" class="btn btn-primary">Create</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        const buttonCancelUserCreateElement = document.getElementById('btn-userCreateCancel');
        const buttonCreateUserElement = document.getElementById('btn-userCreate');
        const errorMessageDiv = document.getElementById('errorMessages');

        async function postData() {
            // Serialize the form data
            var formData = $('#userCreateForm').serialize();

            try {
                // Make an asynchronous AJAX request using async/await
                const result = await $.ajax({
                    url: '/AdminUsers/List',
                    type: 'POST',
                    data: formData,
                });

                if (result.success) {
                    // Process success, close the modal, etc.
                    $('#modalCreateUser').modal('hide');
                    window.location.href = '/AdminUsers/List';
                } else {
                    // Process errors and update the modal with error messages
                    displayErrors(result.errors);
                }
            } catch (error) {
                // Handle the error response
            }
        }

        function displayErrors(errors) {
            // Assuming you have a div with id="errorMessages" in your modal
            var errorContainer = $('#errorMessages');
            errorContainer.empty();

            $.each(errors, function (fieldName, fieldErrors) {
                var errorHtml = '<p id="errorMessage" class="text-danger">' + fieldErrors + '</p>';
                errorContainer.append(errorHtml);
                console.log(fieldErrors);
            });

            // Show the modal with errors
            $('#modalCreateUser').modal('show');
        }

        // Attach the async function to the form submission event
        $(document).ready(function () {
            $('#userCreateForm').submit(function (e) {
                e.preventDefault();
                postData();
            });
        });

        function removeInputDetails() {
            errorMessageDiv.remove();
            $("#userCreateForm").trigger("reset");
        }

        buttonCancelUserCreateElement.addEventListener('click', removeInputDetails);
        buttonCreateUserElement.addEventListener('click', postData);
    </script>
}